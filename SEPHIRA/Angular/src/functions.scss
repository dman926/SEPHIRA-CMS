/*--------------------------------------------------------------
# Rem calculator - Use this to convert px to rem units
> $pixels = pixel value (don't include px)
> $context = default base font size declared in _settings.variables.scss
--------------------------------------------------------------*/

@function rem($pixels,
$context: $font-size-base) {
	@return #{math.div($pixels,$context)}rem;
}


/*--------------------------------------------------------------
# em calculator - Use this to convert px to em units
> $pixels = pixel value (don't include px)
> $context = default base font size declared in _settings.variables.scss
--------------------------------------------------------------*/

@function em($pixels,
$context: $font-size-base) {
	@return #{math.div($pixels,$context)}em;
}


/*--------------------------------------------------------------
# Default font-size for site
--------------------------------------------------------------*/

$font-size-base: 16; // 16px

/*--------------------------------------------------------------
# Breakpoints for site, called on in breakpoint mixins
--------------------------------------------------------------*/

$screen-xxs: 540;
$screen-xs: 767;
$screen-sm: 900;
$screen-md: 1023;
$screen-lg: 1200;
$screen-xl: 1400;
$screen-xxl: 1600;

/*--------------------------------------------------------------
# font-settings - Use when declaring a font-family. Sets:
> font-family - required
> font-weight - required
> font-style - defaults to normal
--------------------------------------------------------------*/

@mixin font-settings($font,
$weight,
$style: normal) {
	font-family: $font;
	font-weight: $weight;
	font-style: $style;
}


/*--------------------------------------------------------------
# typesetting - Use this for setting font-size and line-height on elements. Enter pixel numbers to have them converted to responsive units. It takes three parameters:
> font-size-pixels - font-size in pixels, just include number without unit (required)
> line-height-pixels - line-height in pixels, just include number without unit (required)
> context - used to set rem units for font-size. The default value is a variable declared in _settings.variables.scss
--------------------------------------------------------------*/

@mixin typesetting($font-size-pixels,
$line-height-pixels,
$context: $font-size-base) {
	font-size: (math.div($font-size-pixels, $context)) + rem;
	line-height: (math.div($line-height-pixels, $font-size-pixels));
}


/*--------------------------------------------------------------
# breakpoints - Use for setting breakpoints in em units. There are 7 breakpoints listed below (values listed in _settings.variables.scss). Use only what you need:
> brkpnt-xxs
> brkpnt-xs
> brkpnt-sm
> brkpnt-md
> brkpnt-lg
> brkpnt-xl
> brkpnt-xxl
--------------------------------------------------------------*/

@mixin brkpnt-xxs {
	@media only screen and (min-width: #{math.div($screen-xxs, $font-size-base)}em) {
		@content;
	}
}

@mixin brkpnt-xs {
	@media only screen and (min-width: #{math.div($screen-xs, $font-size-base)}em) {
		@content;
	}
}

@mixin brkpnt-sm {
	@media only screen and (min-width: #{math.div($screen-sm, $font-size-base)}em) {
		@content;
	}
}

@mixin brkpnt-md {
	@media only screen and (min-width: #{math.div($screen-md, $font-size-base)}em) {
		@content;
	}
}

@mixin brkpnt-lg {
	@media only screen and (min-width: #{math.div($screen-lg, $font-size-base)}em) {
		@content;
	}
}

@mixin brkpnt-xl {
	@media only screen and (min-width: #{math.div($screen-xl, $font-size-base)}em) {
		@content;
	}
}

@mixin brkpnt-xxl {
	@media only screen and (min-width: #{math.div($screen-xxl, $font-size-base)}em) {
		@content;
	}
}


/*--------------------------------------------------------------
>>> Spacing:
----------------------------------------------------------------
# Responsive spacing
# Component padding
# Fixed spacing
# Vertical margin utility classes (margin-top, margin-bottom)
--------------------------------------------------------------*/

/*--------------------------------------------------------------
# Responsive spacing
    > Set in ems
    > These should be the primary spacing options used
--------------------------------------------------------------*/
$space-unit: 1em;
$space-xxxs: calc(0.25 * $space-unit);
$space-xxs: calc(0.375 * $space-unit);
$space-xs: calc(0.5 * $space-unit);
$space-sm: calc(0.75 * $space-unit);
$space-md: calc(1.25 * $space-unit);
$space-lg: calc(2 * $space-unit);
$space-xl: calc(3.25 * $space-unit);
$space-xxl: calc(5.25 * $space-unit);
$space-xxxl: calc(8.5 * $space-unit);
/*--------------------------------------------------------------
# Component spacing
    > Default padding for boxy elements like UI cards
--------------------------------------------------------------*/
$component-padding: $space-sm;
/*--------------------------------------------------------------
# Input spacing
    > Default padding for inputs
--------------------------------------------------------------*/
$input-padding: $space-xxs;
/*--------------------------------------------------------------
# Fixed Spacing
    > Set in rems
--------------------------------------------------------------*/
$space-unit-fixed: 1rem;
$space-xxxs-fixed: calc(0.25 * $space-unit);
$space-xxs-fixed: calc(0.375 * $space-unit);
$space-xs-fixed: calc(0.5 * $space-unit-fixed);
$space-sm-fixed: calc(0.75 * $space-unit-fixed);
$space-md-fixed: calc(1.25 * $space-unit-fixed);
$space-lg-fixed: calc(2 * $space-unit-fixed);
$space-xl-fixed: calc(3.25 * $space-unit-fixed);
$space-xxl-fixed: calc(5.25 * $space-unit-fixed);
$space-xxxl-fixed: calc(8.5 * $space-unit);


/*--------------------------------------------------------------
# Vertical margin utility classes
    > Top
    > Bottom
    > Breakpoint adjustment (viewport sizes above 900px)
--------------------------------------------------------------*/


/*---------------
Top
----------------*/

.margin-top,
.margin-top--md {
	margin-top: $space-md;
}

.margin-top--xxxs {
	margin-top: $space-xxxs;
}

.margin-top--xxs {
	margin-top: $space-xxs;
}

.margin-top--xs {
	margin-top: $space-xs;
}

.margin-top--sm {
	margin-top: $space-sm;
}

.margin-top--lg {
	margin-top: $space-lg;
}

.margin-top--xl {
	margin-top: $space-xl;
}

.margin-top--xxl {
	margin-top: $space-xxl;
}

.margin-top--xxxl {
	margin-top: $space-xxxl;
}


/*---------------
Bottom
----------------*/

.margin-bottom,
.margin-bottom--md {
	margin-bottom: $space-md;
}

.margin-bottom--xxxs {
	margin-bottom: $space-xxxs;
}

.margin-bottom--xxs {
	margin-bottom: $space-xxs;
}

.margin-bottom--xs {
	margin-bottom: $space-xs;
}

.margin-bottom--sm {
	margin-bottom: $space-sm;
}

.margin-bottom--lg {
	margin-bottom: $space-lg;
}

.margin-bottom--xl {
	margin-bottom: $space-xl;
}

.margin-bottom--xxl {
	margin-bottom: $space-xxl;
}

.margin-bottom--xxxl {
	margin-bottom: $space-xxxl;
}


/*---------------
Breakpoint
----------------*/

@include brkpnt-sm {
	/* Top */
	.margin-top,
	.margin-top--md {
		margin-top: $space-lg;
	}
	.margin-top--xxxs {
		margin-top: $space-xxs;
	}
	.margin-top--xxs {
		margin-top: $space-xs;
	}
	.margin-top--xs {
		margin-top: $space-sm;
	}
	.margin-top--sm {
		margin-top: $space-md;
	}
	.margin-top--lg {
		margin-top: $space-xl;
	}
	.margin-top--xl {
		margin-top: $space-xxl;
	}
	.margin-top--xxl {
		margin-top: $space-xxxl;
	}
	/* Bottom */
	.margin-bottom,
	.margin-bottom--md {
		margin-bottom: $space-lg;
	}
	.margin-bottom--xxxs {
		margin-bottom: $space-xxs;
	}
	.margin-bottom--xxs {
		margin-bottom: $space-xs;
	}
	.margin-bottom--xs {
		margin-bottom: $space-sm;
	}
	.margin-bottom--sm {
		margin-bottom: $space-md;
	}
	.margin-bottom--lg {
		margin-bottom: $space-xl;
	}
	.margin-bottom--xl {
		margin-bottom: $space-xxl;
	}
	.margin-bottom--xxl {
		margin-bottom: $space-xxxl;
	}
}

@function hexToRGB($hex) {
	@return red($hex),
	green($hex),
	blue($hex);
}


/*--------------------------------------------------------------
>>> Typography:
----------------------------------------------------------------
# Type Scale
# Generic Type Styles
# Heading Styles
# Base body styles
--------------------------------------------------------------*/


/*--------------------------------------------------------------
# Type Scale
    > Variables for fonts
    > Variable for base font-size
    > Variable for scaling ratio
    > Type scale based on font-size and scaling ratio
    > Variables for line-heights
    > Breakpoints to adjust typesetting
--------------------------------------------------------------*/

// Fonts
$font-primary: 'Open Sans', sans-serif;
$font-secondary: 'Roboto', sans-serif;
// Base font-size for site, 21px
$text-base-size: 1.3125rem;
// Base scaling ratio, minor third
$text-scale-ratio: 1.2;
// type scale, based on mobile font-sizes
$text-xs: calc(($text-base-size / $text-scale-ratio) / $text-scale-ratio); // 14.583px
$text-sm: calc($text-xs * $text-scale-ratio); // 17.5px
$text-md: calc($text-sm * $text-scale-ratio * $text-scale-ratio); // 25.2px
$text-lg: calc($text-md * $text-scale-ratio); // 30.24px
$text-xl: calc($text-lg * $text-scale-ratio); // 36.288px
$text-xxl: calc($text-xl * $text-scale-ratio); // 43.5456px
$text-xxxl: calc($text-xxl * $text-scale-ratio); // 52.25472px
// line-heights
$heading-line-height: calc(4px + 2ex + 4px);
$base-line-height: 1.5;


/*--------------------------------------------------------------
Increase font-size @ specified breakpoints
--------------------------------------------------------------*/

@include brkpnt-sm {
	$text-scale-ratio: 1.25; // major third
}

@include brkpnt-lg {
	$text-scale-ratio: 1.333; // perfect fourth
}

@include brkpnt-xxl {
	$text-base-size: 1.5rem; // body font size - 24px
}


/*--------------------------------------------------------------
# Generic Type Styles
--------------------------------------------------------------*/

p,
li,
ol,
h1,
h2,
h3,
h4,
h5,
h6 {
	word-break: break-word; // Helps prevent overflow of long words/names/URLs
	hyphens: auto; // Helps prevent overflow of long words/names/URLs, but not supported for all languages
	margin-top: 0;
}

body {
	@include font-settings($font-primary,
	400);
	font-size: $text-base-size;
	line-height: 1.5;
	@media print {
		&,
		* {
			color: black !important;
			font-family: "Roboto", serif !important;
			border: none !important;
			padding: 0 !important;
			border-radius: 0 !important;
			height: auto;
			max-width: 100%;
			text-align: left !important;
		}
		li {
			padding-left: 1rem !important;
		}
	}
}

// Base paragraph spacing
p {
	margin-bottom: $space-md;
}

strong {
	font-weight: 600;
}


/*--------------------------------------------------------------
# Heading Styles
    > h1-h6
    > Heading utility clases (.h1-.h6)
--------------------------------------------------------------*/

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
	@include font-settings($font-secondary,
	600);
	line-height: $heading-line-height;
	margin-bottom: $space-xxs;
}

h1,
.h1 {
	font-size: $text-xxl;
}

h2,
.h2 {
	font-size: $text-xl;
}

h3,
.h3 {
	font-size: $text-lg;
}

h4,
.h4 {
	font-size: $text-md;
}

h5,
.h5,
h6,
.h6 {
	font-size: $text-base-size;
}


/*--------------------------------------------------------------
Heading spacing
    > Spacing between basic typographic elements
    > Includes heading utility classes
    > Padding used to avoid clashing margins
--------------------------------------------------------------*/

p+h2,
ul+h2,
ol+h2,
p+.h2,
ul+.h2,
ol+.h2,
p+h3,
ul+h3,
ol+h3,
p+.h3,
ul+.h3,
ol+.h3,
p+h4,
ul+h4,
ol+h4,
p+.h4,
ul+.h4,
ol+.h4,
p+h5,
ul+h5,
ol+h5,
p+.h5,
ul+.h5,
ol+.h5,
p+h6,
ul+h6,
ol+h6,
p+.h6,
ul+.h6,
ol+.h6 {
	padding-top: $space-sm;
}


/*--------------------------------------------------------------
Print spacing for headings
--------------------------------------------------------------*/

@media print {
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		margin: 0 0 rem(8);
	}
}